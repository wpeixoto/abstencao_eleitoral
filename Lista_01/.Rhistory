setwd("~/Nextcloud_CD/Cursos/Mestrado/Lista_01")
knitr::opts_chunk$set(echo = TRUE)
asnwer_style="background-color:#a9e970;border-color:navy;padding:5px"
#done = paste0("<span style=`", asnwer_style, "`>Done</span>")
done="<span style='color:green'>Done</span>"
pend="<span style='color:red' title='Falta alguma coisa'>Pending</span>"
rm(list = ls(all = TRUE))
# votação por zona eleitoral de SC
# votZona <- read.table("votacao_candidato_munzona_2016_SC.txt",sep=";")
votZona <- read.table("votacao_candidato_munzona_2016_SC.utf8.txt",sep=";")
names(votZona) <- c(
"DATA_GERACAO", "HORA_GERACAO", "ANO_ELEICAO",  "NUM_TURNO", "DESCRICAO_ELEICAO", "SIGLA_UF", "SIGLA_UE", "CODIGO_MUNICIPIO", "NOME_MUNICIPIO", "NUMERO_ZONA", "CODIGO_CARGO", "NUMERO_CAND",
"SQ_CANDIDATO", "NOME_CANDIDATO", "NOME_URNA_CANDIDATO", "DESCRICAO_CARGO", "COD_SIT_CAND_SUPERIOR", "DESC_SIT_CAND_SUPERIOR",
"CODIGO_SIT_CANDIDATO", "DESC_SIT_CANDIDATO", "CODIGO_SIT_CAND_TOT", "DESC_SIT_CAND_TOT", "NUMERO_PARTIDO", "SIGLA_PARTIDO",
"NOME_PARTIDO", "SEQUENCIAL_LEGENDA", "NOME_COLIGACAO", "COMPOSICAO_LEGENDA",
"TOTAL_VOTOS", "TRANSITO"
)
# filtra candidatos deferidos no primeiro turno
votZona <- votZona[(votZona$DESC_SIT_CANDIDATO == "DEFERIDO"
| votZona$DESC_SIT_CANDIDATO == "DEFERIDO COM RECURSO")
& votZona$NUM_TURNO == 1, ]
# cria um identificador para o candidato combinando
# os campos SIGLA_UE e NUMERO_CAND
votZona$ID_CANDIDATO <-
as.numeric(paste0(as.character(votZona$SIGLA_UE),
as.character(votZona$NUMERO_CAND)))
# mantém apenas os campos de interesse
votZona <- votZona[ , c(
"CODIGO_MUNICIPIO", "NOME_MUNICIPIO",
"NUMERO_ZONA", "ID_CANDIDATO",
"NOME_CANDIDATO", "NOME_URNA_CANDIDATO",
"DESCRICAO_CARGO", "NUMERO_PARTIDO",
"SIGLA_PARTIDO", "NOME_PARTIDO",
"NOME_COLIGACAO", "COMPOSICAO_LEGENDA",
"TOTAL_VOTOS", "TRANSITO"
)
]
# candidatos SC
cand <- read.table("consulta_cand_2016_SC.txt",sep=";")
names(cand)[c(4,7,12,13,11,16,17, 29,30,31)] <-
c("NUM_TURNO","SIGLA_UE","SEQUENCIAL_CANDIDATO",
"NUMERO_CANDIDATO", "NOME_CANDIDATO",
"COD_SITUACAO_CANDIDATURA",
"DES_SITUACAO_CANDIDATURA",
"IDADE_DATA_ELEICAO",
"CODIGO_SEXO",
"DESCRICAO_SEXO"
)
# cria um identificador para o candidato combinando
# os campos SIGLA_UE e NUMERO_CANDIDATO
cand$ID_CANDIDATO <-
as.numeric(paste0(as.character(cand$SIGLA_UE),
as.character(cand$NUMERO_CANDIDATO)))
# filtra candidatos deferidos no primeiro turno
# e mantém apenas os campos de interesse
cand <- cand[(cand$DES_SITUACAO_CANDIDATURA == "DEFERIDO" |
cand$DES_SITUACAO_CANDIDATURA == "DEFERIDO COM RECURSO") &
cand$NUM_TURNO == 1, c(47,11,29,31)]
#  combina os dois data.frames
votZona <- merge(votZona, cand)
# Marcadores de conferência
done="<span style='color:green'>Done</span>"
pend="<span style='color:red' title='Falta alguma coisa'>Pending</span>"
paste("v", 1:3, sep="")
?.
??.
head(votZona)
head(votZona[,.("DESCRICAO_CARGO", NUMERO_ZONA", "TOTAL_VOTOS")])
head(votZona[,.("DESCRICAO_CARGO", "NUMERO_ZONA", "TOTAL_VOTOS")])
head(votZona[,c("DESCRICAO_CARGO", "NUMERO_ZONA", "TOTAL_VOTOS")])
head(votZona[,.(DESCRICAO_CARGO, NUMERO_ZONA, TOTAL_VOTOS)])
head(table(votZona[,c("DESCRICAO_CARGO", "NUMERO_ZONA", "TOTAL_VOTOS")]))
table(votZona[,c("DESCRICAO_CARGO", "NUMERO_ZONA", "TOTAL_VOTOS")])
conta_zonas = votZona[,c("DESCRICAO_CARGO", "NUMERO_ZONA", "TOTAL_VOTOS")]
table(conta_zonas$DESCRICAO_CARGO)
table(conta_zonas$NUMERO_ZONA)
names(which.max(table(conta_zonas$NUMERO_ZONA)))
names(which.min(table(conta_zonas$NUMERO_ZONA)))
table(as.factor(conta_zonas$NUMERO_ZONA))
summary(table(as.factor(conta_zonas$NUMERO_ZONA)))
class(conta_zonas)
class(conta_zonas$DESCRICAO_CARGO)
class(conta_zonas$NUMERO_ZONA)
class(conta_zonas$TOTAL_VOTOS)
conta_zonas$NUMERO_ZONA = as.factor(conta_zonas$NUMERO_ZONA)
summary(conta_zonas)
View(votZona)
conta_zonas[,,by=c('DESCRICAO_CARGO', 'NUMERO_ZONA')]
conta_zonas[,,c('DESCRICAO_CARGO', 'NUMERO_ZONA')]
library("dplyr", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
group_by(conta_zonas, c(1, 2))
group_by(conta_zonas, 1))
group_by(conta_zonas, 1)
group_by(conta_zonas, DESCRICAO_CARGO)
group_by(conta_zonas, DESCRICAO_CARGO, sum=T)
group_by(conta_zonas, DESCRICAO_CARGO, NUMERO_ZONA, sum=T)
group_by(conta_zonas, DESCRICAO_CARGO, NUMERO_ZONA, add=T)
lirary(data.table)
library(data.table)
DT = data.table(conta_zonas)
DT[, lapply(.SD, sum), by=DESC]
View(DT)
summary(DT)
View(conta_zonas)
aggregate(TOTAL_VOTOS ~NUMERO_ZONA, conta_zonas, sum)
soma_zonas = aggregate(TOTAL_VOTOS ~NUMERO_ZONA, conta_zonas, sum)
summary(soma_zonas)
names(which.max(table(soma_zonas$NUMERO_ZONA)))
table(soma_zonas)
table(soma_zonas$TOTAL_VOTOS)
head(soma_zonas[order(-TOTAL_VOTOS)])
View(soma_zonas)
attach(soma_zonas)
head(soma_zonas[order(-TOTAL_VOTOS)])
head(soma_zonas[order(TOTAL_VOTOS)])
?order
order
head(order(soma_zonas))
head(order(soma_zonas$TOTAL_VOTOS))
head(order(soma_zonas$TOTAL_VOTOS, decreasing = T))
head(conta_zonas[order(soma_zonas$TOTAL_VOTOS, decreasing = T)])
head(conta_zonas$NUMERO_ZONA[order(soma_zonas$TOTAL_VOTOS, decreasing = T)])
?ordered
length(soma_zonas)
length(soma_zonas$NUMERO_ZONA)
head(conta_zonas[order(soma_zonas$TOTAL_VOTOS, decreasing = T), ])
head(conta_zonas[order(soma_zonas$TOTAL_VOTOS), ])
head(soma_zonas)
head(soma_zonas[order(soma_zonas$TOTAL_VOTOS), ])
head(soma_zonas[order(soma_zonas$TOTAL_VOTOS, decreasing = T), ])
soma_zonas[order(soma_zonas$TOTAL_VOTOS, decreasing = T), ][1]
soma_zonas[order(soma_zonas$TOTAL_VOTOS, decreasing = T), ]
menos_votos = soma_zonas[order(soma_zonas$TOTAL_VOTOS, decreasing = T), ]
head(menos_votos)
menos_votos[1,]
menos_votos[1,][2]
menos_votos[1,]$TOTAL_VOTOS
View(votZona)
?sprintf
format(115944, small.mark = ".")
format(115944, small.mark = ".", small.interval = 3)
format(115944, big.mark = ".", small.mark = "%", small.interval = 3)
format(115944, big.mark = ".")
format(115944, big.mark = ".", decimal.mark = ",")
knitr::opts_chunk$set(echo = TRUE)
answer_style="background-color:#a9e970;border-color:navy;padding:5px"
#done = paste0("<span style=`", answer_style, "`>Done</span>")
done="<span style='color:green'>Done</span>"
pend="<span style='color:red' title='Falta alguma coisa'>Pending</span>"
conta_municipios = votZona[,c("DESCRICAO_CARGO", "CODIGO_MUNICIPIO", "TOTAL_VOTOS")]
attach(conta_municipios)
soma_municipios = aggregate(TOTAL_VOTOS -CODIGO_MUNICIPIO, conta_municipios, sum)
muni_menos_votos = soma_municipios[order(soma_zonas$TOTAL_VOTOS, decreasing = T), ]
head(muni_menos_votos)
menor_municipio = muni_menos_votos[1, ]
menor_municipio
menor_municipio$CODIGO_MUNICIPIO
detach(conta_zonas)
detach(conta_zonas)
attach(conta_zonas)
detach(conta_zonas)
detach(conta_zonas)
detach(conta_municipios)
conta_municipios = votZona[,c("DESCRICAO_CARGO", "CODIGO_MUNICIPIO", "TOTAL_VOTOS")]
attach(conta_municipios)
soma_municipios = aggregate(TOTAL_VOTOS -CODIGO_MUNICIPIO, conta_municipios, sum)
muni_menos_votos = soma_municipios[order(soma_zonas$TOTAL_VOTOS, decreasing = T), ]
head(muni_menos_votos)
menor_municipio = muni_menos_votos[1, ]
menor_municipio
clear
clear()
# TSE
rm(list = ls(all = TRUE))
# votação por zona eleitoral de SC
# votZona <- read.table("votacao_candidato_munzona_2016_SC.txt",sep=";")
votZona <- read.table("votacao_candidato_munzona_2016_SC.utf8.txt",sep=";")
names(votZona) <- c(
"DATA_GERACAO", "HORA_GERACAO", "ANO_ELEICAO",  "NUM_TURNO", "DESCRICAO_ELEICAO", "SIGLA_UF", "SIGLA_UE", "CODIGO_MUNICIPIO", "NOME_MUNICIPIO", "NUMERO_ZONA", "CODIGO_CARGO", "NUMERO_CAND",
"SQ_CANDIDATO", "NOME_CANDIDATO", "NOME_URNA_CANDIDATO", "DESCRICAO_CARGO", "COD_SIT_CAND_SUPERIOR", "DESC_SIT_CAND_SUPERIOR",
"CODIGO_SIT_CANDIDATO", "DESC_SIT_CANDIDATO", "CODIGO_SIT_CAND_TOT", "DESC_SIT_CAND_TOT", "NUMERO_PARTIDO", "SIGLA_PARTIDO",
"NOME_PARTIDO", "SEQUENCIAL_LEGENDA", "NOME_COLIGACAO", "COMPOSICAO_LEGENDA",
"TOTAL_VOTOS", "TRANSITO"
)
# filtra candidatos deferidos no primeiro turno
votZona <- votZona[(votZona$DESC_SIT_CANDIDATO == "DEFERIDO"
| votZona$DESC_SIT_CANDIDATO == "DEFERIDO COM RECURSO")
& votZona$NUM_TURNO == 1, ]
# cria um identificador para o candidato combinando
# os campos SIGLA_UE e NUMERO_CAND
votZona$ID_CANDIDATO <-
as.numeric(paste0(as.character(votZona$SIGLA_UE),
as.character(votZona$NUMERO_CAND)))
# mantém apenas os campos de interesse
votZona <- votZona[ , c(
"CODIGO_MUNICIPIO", "NOME_MUNICIPIO",
"NUMERO_ZONA", "ID_CANDIDATO",
"NOME_CANDIDATO", "NOME_URNA_CANDIDATO",
"DESCRICAO_CARGO", "NUMERO_PARTIDO",
"SIGLA_PARTIDO", "NOME_PARTIDO",
"NOME_COLIGACAO", "COMPOSICAO_LEGENDA",
"TOTAL_VOTOS", "TRANSITO"
)
]
# candidatos SC
cand <- read.table("consulta_cand_2016_SC.txt",sep=";")
names(cand)[c(4,7,12,13,11,16,17, 29,30,31)] <-
c("NUM_TURNO","SIGLA_UE","SEQUENCIAL_CANDIDATO",
"NUMERO_CANDIDATO", "NOME_CANDIDATO",
"COD_SITUACAO_CANDIDATURA",
"DES_SITUACAO_CANDIDATURA",
"IDADE_DATA_ELEICAO",
"CODIGO_SEXO",
"DESCRICAO_SEXO"
)
# cria um identificador para o candidato combinando
# os campos SIGLA_UE e NUMERO_CANDIDATO
cand$ID_CANDIDATO <-
as.numeric(paste0(as.character(cand$SIGLA_UE),
as.character(cand$NUMERO_CANDIDATO)))
# filtra candidatos deferidos no primeiro turno
# e mantém apenas os campos de interesse
cand <- cand[(cand$DES_SITUACAO_CANDIDATURA == "DEFERIDO" |
cand$DES_SITUACAO_CANDIDATURA == "DEFERIDO COM RECURSO") &
cand$NUM_TURNO == 1, c(47,11,29,31)]
#  combina os dois data.frames
votZona <- merge(votZona, cand)
conta_zonas = votZona[,c("DESCRICAO_CARGO", "CODIGO_MUNICIPIO", "NUMERO_ZONA", "TOTAL_VOTOS")]
conta_zonas$NUMERO_ZONA = as.factor(conta_zonas$NUMERO_ZONA)
attach(conta_zonas)
soma_zonas = aggregate(TOTAL_VOTOS ~NUMERO_ZONA, conta_zonas, sum)
detach(conta_zonas)
menos_votos = soma_zonas[order(soma_zonas$TOTAL_VOTOS, decreasing = T), ]
head(menos_votos)
menor_zona = menos_votos[1,]
detach(conta_zonas)
?attach
search()
View(conta_zonas)
rm(conta_zonas)
rm(menor_zona)
rm(menos_votos)
rm(soma_zonas)
conta_zonas = votZona[,c("DESCRICAO_CARGO", "CODIGO_MUNICIPIO", "NUMERO_ZONA", "TOTAL_VOTOS")]
attach(conta_zonas)
rm(conta_zonas)
#conta_zonas = votZona[,c("DESCRICAO_CARGO", "CODIGO_MUNICIPIO", "NUMERO_ZONA", "TOTAL_VOTOS")]
conta_zonas = votZona[,c("DESCRICAO_CARGO", "NUMERO_ZONA", "TOTAL_VOTOS")]
attach(conta_zonas)
detach(conta_zonas)
detach(conta_zonas)
detach(conta_zonas)
detach()
search()
detach(soma_zonas)
detach(soma_zonas)
rm(conta_zonas)
#conta_zonas = votZona[,c("DESCRICAO_CARGO", "CODIGO_MUNICIPIO", "NUMERO_ZONA", "TOTAL_VOTOS")]
conta_zonas = votZona[,c("DESCRICAO_CARGO", "NUMERO_ZONA", "TOTAL_VOTOS")]
attach(conta_zonas)
soma_zonas = aggregate(TOTAL_VOTOS ~NUMERO_ZONA, conta_zonas, sum)
detach(conta_zonas)
menos_votos = soma_zonas[order(soma_zonas$TOTAL_VOTOS, decreasing = T), ]
head(menos_votos)
head(menos_votos)
head(aggregate(conta_zonas$TOTAL_VOTOS -conta_zonas$DESCRICAO_CARGO. conta_zonas, sum))
head(aggregate(conta_zonas$TOTAL_VOTOS -conta_zonas$DESCRICAO_CARGO. conta_zonas, sum))
head(aggregate(conta_zonas$TOTAL_VOTOS -conta_zonas$DESCRICAO_CARGO, conta_zonas, sum))
head(aggregate(conta_zonas$TOTAL_VOTOS -conta_zonas$NUMERO_ZONA, conta_zonas, sum))
head(aggregate(conta_zonas$TOTAL_VOTOS ~conta_zonas$NUMERO_ZONA, conta_zonas, sum))
head(aggregate(votZona$NOME_MUNICIPIO votZona$CODIGO_MUNICIPIO, votZona, sum))
head(votZona[c('NOME_MUNICIPIO', 'CODIGO_MUNICIPIO')])
head(votZona[c('NOME_MUNICIPIO', 'CODIGO_MUNICIPIO', 'NUMERO_ZONA')])
head(unique(votZona[c('NOME_MUNICIPIO', 'CODIGO_MUNICIPIO', 'NUMERO_ZONA')]))
tab_mun_zona = unique(votZona[c('NOME_MUNICIPIO', 'CODIGO_MUNICIPIO', 'NUMERO_ZONA')])
tab_mun_zona[tab_mun_zona$NUMERO_ZONA == 77]
tab_mun_zona[tab_mun_zona$NUMERO_ZONA == 77, ]
menor_municipio$NOME_MUNICIPIO = tab_mun_zona$NOME_MUNICIPIO[tab_mun_zona$CODIGO_MUNICIPIO == tab_mun_zona$CODIGO_MUNICIPIO]
muni_menos_votos = soma_municipios[order(soma_zonas$TOTAL_VOTOS, decreasing = T), ]
rm(conta_zonas)
rm(menos_votos, soma_zonas, tab_mun_zona)
#conta_zonas = votZona[,c("DESCRICAO_CARGO", "CODIGO_MUNICIPIO", "NUMERO_ZONA", "TOTAL_VOTOS")]
conta_zonas = votZona[,c("DESCRICAO_CARGO", "NUMERO_ZONA", "TOTAL_VOTOS")]
conta_zonas$NUMERO_ZONA = as.factor(conta_zonas$NUMERO_ZONA)
attach(conta_zonas)
soma_zonas = aggregate(TOTAL_VOTOS ~NUMERO_ZONA, conta_zonas, sum)
detach(conta_zonas)
menos_votos = soma_zonas[order(soma_zonas$TOTAL_VOTOS, decreasing = T), ]
head(menos_votos)
menor_zona = menos_votos[1,]
conta_municipios = votZona[,c("DESCRICAO_CARGO", "CODIGO_MUNICIPIO", "TOTAL_VOTOS")]
attach(conta_municipios)
soma_municipios = aggregate(TOTAL_VOTOS ~CODIGO_MUNICIPIO, conta_municipios, sum)
detach(conta_municipios)
muni_menos_votos = soma_municipios[order(soma_zonas$TOTAL_VOTOS, decreasing = T), ]
head(muni_menos_votos)
menor_municipio = muni_menos_votos[1, ]
tab_mun_zona = unique(votZona[c('NOME_MUNICIPIO', 'CODIGO_MUNICIPIO', 'NUMERO_ZONA')])
menor_municipio$NOME_MUNICIPIO = tab_mun_zona$NOME_MUNICIPIO[tab_mun_zona$CODIGO_MUNICIPIO == tab_mun_zona$CODIGO_MUNICIPIO]
head(tab_mun_zona$NOME_MUNICIPIO[tab_mun_zona$CODIGO_MUNICIPIO == tab_mun_zona$CODIGO_MUNICIPIO])
tab_mun_zona$NOME_MUNICIPIO[tab_mun_zona$CODIGO_MUNICIPIO == tab_mun_zona$CODIGO_MUNICIPIO]
menor_municipio$NOME_MUNICIPIO = tab_mun_zona$NOME_MUNICIPIO[tab_mun_zona$CODIGO_MUNICIPIO == menor_municipio$CODIGO_MUNICIPIO]
menor_municipio
tab_mun_zona[tab_mun_zona$NUMERO_ZONA == 105]
tab_mun_zona[tab_mun_zona$NUMERO_ZONA == 105, ]
tab_mun_zona[tab_mun_zona$CODIGO_MUNICIPIO == 81043, ]
tab_mun_zona[tab_mun_zona$NUMERO_ZONA == menor_zona[1]]
tab_mun_zona[tab_mun_zona$NUMERO_ZONA == menor_zona[1], ]
municipios_zona_menor = tab_mun_zona[tab_mun_zona$NUMERO_ZONA == 105, ]
municipios_zona_menor
menor_zona
menor_zona[1]
menor_zona$NUMERO_ZONA
menor_zona$NUMERO_ZONA[1]
menor_zona$NUMERO_ZONA[[1]]
menor_zona[[1]]
length(menor_zona[[1]])
View(cand)
# lê o arquivo
desempregados = read.csv("Benefits.csv")
media_idades = mean(desempregados$age)
media_idades_estado_94 = mean(idades_estado_94)
# somente o estado 94
idades_estado_94 = desempregados$age[desempregados$state == 94]
mediana_estado_94 = quantile(idades_estado_94, c(0.5))[[1]] # Mediana
length(idades_estado_94[idades_estado_94<35])
length(idades_estado_94[idades_estado_94>35])
media_idades_estado_94 = mean(idades_estado_94)
length(idades_estado_94[idades_estado_94<media_idades_estado_94])
estilo_X = c('<div style="...">', '</div>')
names(estilo_X)
names(estilo_X) = c("inicio", "fim")
names(estilo_X)
estilo_X
estilo_X$inicio
estilo_X["inicio"]
